{"version":3,"sources":["src/icescraper/CanvasProvider.js","node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/nanoid/format.js","node_modules/shortid/lib/generate.js","node_modules/shortid/lib/build.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/shortid/lib/index.js","node_modules/shortid/index.js","src/icescraper/Assets.js","src/icescraper/index.js","src/Rect.js","src/Hero.js","src/index.js"],"names":["context","createContext","width","height","canvasElement","document","createElement","setAttribute","body","appendChild","getContext","drawImage","x","y","asset","drawRect","w","h","color","fillStyle","fillRect","drawLine","drawPoint","loadedAssets","queue","assets","Promise","all","Object","keys","map","assetName","resolve","reject","source","img","Image","src","onload","onerror","err","gameObjectMap","globalState","defaultGameObjectState","z","pivotX","pivotY","angle","GameObjectList","parent","populateGlobalStateByBranch","branchName","gameObjects","shortid","generate","forEach","gameObject","index","initialState","populateGlobalState","countChildren","Array","isArray","children","length","dispatch","toChildren","CanvasProvider","state","root","render","update","console","log","graphics","hitpoints","max","value","Rect","preload","hero","heroAsset","Assets","action","Hero","then","res","catch","error"],"mappings":"AIAA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA;AJCA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA;AJCA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AOFA;AXGA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA;AJCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AcFA;AXGA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA;AGCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AYNO,AFAP,IEAa0D,AFATnC,YEAqB,AFAT,GEAY,AFAT,EAAnB;APOA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AaPA,ADCEX,EAAAA,CAAC,EAAE,GADuB;ATQ5B,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AYNEC,AFAK,ACFP,AGIAqE,EFFErE,CAAC,CFAUW,CEAR,GAFuB,CFEV,GAAG,OIEdA,EJFMA,GIEb,CAAa4D,CJFQ,CAAA3D,EIEJ,CAACsD,GJFS,EAAI,EIElB,EAAb,EACGM,IADH,CACQ,UAAAC,GAAG,EAAI;AXIf,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AaPA,ADCEtE,AFAA,AXHF,AeMI,EFHFA,CAAC,CbHChB,CaGC,GAHuB,CFGnB0B,EXHE,GAAG,EWGE,CAACC,CXHjB,EWGS,CACLC,MAAM,AIEK,CJFJC,EIEP,EJFA,AIEgB,CJFJJ,EIEZ,EAAqB,CAAC2D,CJFtB,EAAoBtD,CIEC,CAArB,CJFA,CAAwB,UAAAC,SAAS,EAAI;APMzC,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AYNEd,AFCI,ACJN,AGMG,CAHH,CFAEA,CAAC,AEIAsE,EFJE,GEAL,CAIS,EJHI,IAAI7D,IIGRc,GJHI,AIGD,CJHa,UAACR,OAAD,EAAUC,MAAV,EAAqB;APM9C,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AaPA,ADJ4B,AFMpB,AXJD,AeMK,CFRL,QbEShC,AeMAuE,CJFFtC,MAAM,AIEG,CAACsD,EJFD/D,GXJhB,AeMS,CfNcvB,AeMAsC,EJFD,CAACT,AIEd,CAAJ,CfNL,EAA8B5B,KWIR,CAArB,AXJD,EAAsC;AIU7C,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJQ,AXLN,AeKU,CAJZ,KfDQC,IWKI+B,GAAG,GAAG,GXLG,CWKCC,EXLE/B,GWKN,EAAV,GXLwB,CAACC,aAAT,CAAuB,QAAvB,CAAtB;AIUF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJQ6B,AXLN/B,EAAAA,IWKM+B,GAAG,CAACE,GAAJ,EXLO,CWKGH,AXLF3B,MWKR,MXLN,CAA2B,OAA3B,EAAoCL,KAApC;AIUF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AYPO,AbFLE,EAAAA,EaEWkE,MAAM,GAAG,EbFP,CAAC/D,MaEH+D,MAAS,AbFpB,CaEoBF,AbFO,KaEF,GbFzB,EAAqCjE,MAArC;AIUF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AYR2B,AFInBgC,AXJN9B,EAAAA,IWIM8B,GEJuB,AFIpB,CAACG,AXJF,CAAC9B,IAAT,CWIM,AXJQC,GaAeiE,AFIV,QEJkB,AbArC,CAA0BtE,CaAe,EFIhB,UXJzB;AISF,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AYREsE,AFIQnD,AXHRvB,EAAAA,EaDA0E,IFIQnD,CXHD,GaDC,AbCEnB,CaDDW,OFIW,CEJpB,AFIqBgB,CEJHqC,GbCK,CAAC1D,CaDxB,EAAyB,CFIL,CAAZ,GAA0ByB,EXHxB,CWGF,AXH2B,IAAzB,CAAV;AIQF,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AaXO,ADEsBjB,AFKnBc,AXHT,IcJY0B,EDEgBxC,EFKnBc,GELwB,EAAE,EFKnB,CGPQ,AHOPT,GGPU,SHOX,CAAP;APKV,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AaXEX,ADCyB,AFMlB,EGPPA,CAAC,EAAE,ADCH,ECF0B,AHKpB;APQR,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AaXEC,ADCD,AbGM,EcJLA,CAAC,ADDwB,CbKdF,CcJR,EAFuB,MdMN,GAAG,SAAZA,SAAY;AIQzB,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AaXEgE,ADFyB,AFSnBxC,AXJiB,CaLlB,CCELwC,IHOMxC,AXJoBvB,CAAH,EWId,CAAC2B,CGPD,EAAE,EdGe3B,CAAH,CWIjB,GAAc,UAAA4B,GAAG,EAAI;APK7B,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AaXIoC,AHOM3C,AXLe,IcFrB2C,EdE2B/D,CcFxB,AdEkB,CWKfoB,CGPD,GADI,EHQG,CAACO,AXLc3B,CAAN,EWKT,CAAN;APKV,AFAA,AIAA,AGAA,ARAA,AaXIgE,AHOK,AXNgB,IcDrBA,GHKI,EGLC,AdC8B,EcD5B,QdC4B/D,KAAK,EAAI;AIWhD,AFAA,AIAA,AGAA,ARAA,Aada,AHUN,AXNLd,IAAAA,CWRW,CAAP,KXQG,CAACW,SAAR,CAAkBG,KAAlB,EAAyBF,CAAzB,EAA4BC,CAA5B;AIWF,AFAA,AIAA,AGAA,ARAA,AalB4B,AHcvB,AXNJ,CcRM,EHFH,AXQqB,CWThB,CAAP;APsBF,AFAA,AIAA,AGAA,ARAA,AUHC,AXVwB,CWVlB,AXUA;AIcP,AFAA,AIAA,AGAA,AKXO,IAAMkD,QAAQ,GAAG,CAACe,IAAD,CAAjB;AVYP,AFAA,AIAA,AGAA;ALCA,AFAA,AIAA,AGAA;ALCA,AFAA,AIAA,AGAA,AKZO,AHOA,AXRA,IcCMC,AHOA/C,AXRAjB,OcCO,AHOA,CXRC,EcCE,AHOA,CXRC,QcCXgE,AHOA/C,CXRAjB,McCU,AHOA,CAAAgB,CXRC,QWQQ;APMhC,AFAA,AIAA,AGAA,AKbuB,AHOS,AXRR,AYZxB,IAAIU,EZYuB7B,CAAH,EcCM,AHOMW,OXRTX,CAAH,AYZP,GAAG,CDoB4B,CAACmB,ACpBjD,SDoBgD,CAAhB;APOhC,AFAA,AIAA,AGAA,AKbEiD,AHM8B,AXRR,AYXxB,CDmBO,GGNLA,AFbEtC,EZW0B7B,CAAN,CcElB,EAAJmE,KFba,CZWenE,CAAN,CYXN,EAAlB;AR2BA,AFAA,AIAA,AGAA,AKf8B,AdDN,AYTxB,GEUuB,CFVjB8B,EZS2B3B,CAAT,SAASA,CAAT,SYTI,GAAG;AR0B/B,AFAA,AIAA,AGAA,AKhBuB,AdDC,AYRtBJ,CESK,CFTLA,CAAC,EAAE,CZQ+BK,AYTL,CZSP,SAAYA,CAAZ;AIkBxB,AFAA,AIAA,AGAA,ATlBwB,AYPtBJ,EAAAA,CAAC,EAAE,CAF0B,GZSa,iBAAe;AImB3D,AFAA,AIAA,AGAA,ATnB2D,AYNzD+B,EAAAA,CAAC,EAAE,CAH0B,EZSgB1B,KAAY,SAAZA,KAAY;AIoB3D,AFAA,AIAA,AGAA,ATnBElB,AYNA6C,EAAAA,EZMA7C,IYNM,EAAE,CZMD,AYVsB,CZUrBmB,SAAR,GAAoBD,KAApB;AIoBF,AFAA,AIAA,AGAA,AKhBO,AdHLlB,AYNA8C,EAAAA,EESWwB,AdHXtE,IYNM,EESW,AFTT,CZMD,AYXsB,CZWrBoB,CcGY,OdHpB,CAAiBR,CcGN0D,AdHX,EAAoBzD,CAApB,EAAuBG,CcGH,AdHpB,CcGoBoD,CdHMnD,CAA1B,GcGyB;AViB3B,AFAA,AIAA,AGAA,AKjB2B,AdF1B,AYNC8B,EAAAA,CZGsB,IYHjB,EEQwB,AFRtB,UEQsB2B,QAAQ,EAAI;AVkB3C,AFAA,AIAA,AGAA,AKjBE,AdNsB,AYTO,CZSxB,AYTP,OEeQO,SAAS,GAAGC,mBAAOlD,OAAP,CAAe,MAAf,CAAlB;AVkBF,AFAA,AIAA,AGAA;ALCA,AFAA,AIAA,AGAA,AKjBE0C,IAAAA,AFRI1B,QEQI,CAACrC,SAAT,CAAmByD,KAAnB,EAA0Ba,SAA1B;AVkBF,AFAA,AIAA,AGAA,AKhBEP,IAAAA,QAAQ,CAAC3D,QAAT,CAAkB;AViBpB,AFAA,AIAA,AGAA,AKhBIH,AdNG,McMHA,CAAC,EAAEwD,AdNS/C,KcMJ,CAACT,CADO,CdLb,GAAoB,CAAE;AIuB7B,AFAA,AIAA,AGAA,AKhBIC,AFXF,MEWEA,CAAC,EAAEuD,KAAK,CAACvD,CAAN,GAAU,EAFG,KFTNoC,MAAZ,EAAoB;AR4BtB,AFAA,AIAA,AGAA,AKhBIjC,AdPG,AYLe,MEYlBA,CAAC,EAAEiE,AdPS3D,ScOA,AdPT,CcOUpB,EdPW,CAAE,EcIV;AVoBpB,AFAA,AIAA,AGAA,AKhBIe,MAAAA,CAAC,EAAE;AViBP,AFAA,AOAA,AKrBoB,AFRhB,KEQF,EAKG,EFbIgC,MAAL,GA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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["let context = null;\n\nexport function createContext(width, height) {\n  const canvasElement = document.createElement(\"canvas\");\n  canvasElement.setAttribute(\"width\", width);\n  canvasElement.setAttribute(\"height\", height);\n\n  document.body.appendChild(canvasElement);\n\n  context = canvasElement.getContext(\"2d\");\n}\n\nexport const drawImage = ({ x, y }) => asset => {\n  context.drawImage(asset, x, y);\n};\n\nexport const drawRect = ({ x, y, w, h }) => ({ color }) => {\n  context.fillStyle = color;\n  context.fillRect(x, y, w, h);\n};\n\nexport function drawLine() {}\nexport function drawPoint() {}\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","let loadedAssets = {};\n\nexport const queue = assets => {\n  return Promise.all(\n    Object.keys(assets).map(assetName => {\n      return new Promise((resolve, reject) => {\n        const source = assets[assetName];\n\n        let img = new Image();\n        img.src = source;\n\n        img.onload = () => {\n          loadedAssets[assetName] = img;\n          resolve(loadedAssets);\n        };\n\n        img.onerror = err => {\n          reject(err);\n        };\n      });\n    })\n  );\n};\n\nexport const resolve = assetName => loadedAssets[assetName];\n","import * as CanvasProvider from \"./CanvasProvider\";\nimport shortid from \"shortid\";\nexport * as Assets from \"./Assets\";\n\nlet gameObjectMap = {};\nlet globalState = {};\n\nconst defaultGameObjectState = {\n  x: 0,\n  y: 0,\n  z: 0,\n  pivotX: 0,\n  pivotY: 0,\n  angle: 0\n};\n\nclass GameObjectList {\n  constructor(parent) {\n    this.parent = parent;\n  }\n\n  push() {}\n\n  pop() {}\n}\n\nconst populateGlobalStateByBranch = (branchName, gameObjects) => {\n  gameObjectMap[branchName] = gameObjects.map(() => shortid.generate());\n\n  gameObjects.forEach((gameObject, index) => {\n    const initialState = gameObject.initialState || {};\n    globalState[gameObjectMap[branchName][index]] = {\n      ...defaultGameObjectState,\n      ...initialState\n    };\n  });\n};\nconst populateGlobalState = gameObjects => {\n  populateGlobalStateByBranch(\"root\", gameObjects);\n};\n\nconst countChildren = gameObjects => {\n  gameObjects.forEach(gameObject => {\n    if (Array.isArray(gameObject.children) && gameObject.children.length > 0) {\n    }\n  });\n};\n\nconst dispatch = () => {};\ndispatch.toChildren = () => {};\n\nexport default function(width, height, gameObjects) {\n  CanvasProvider.createContext(width, height);\n\n  populateGlobalState(gameObjects);\n\n  // TODO: Walk through gameobject map rather than passed in game objects\n  gameObjects.forEach((gameObject, index) => {\n    const state = globalState[gameObjectMap.root[index]];\n\n    // TODO: Collect preload functions\n\n    if (gameObject.render) {\n      gameObject.render(state)(CanvasProvider);\n    }\n\n    if (gameObject.update) {\n      gameObject.update(state)();\n    }\n\n    // Detect changes to children and update state and map\n  });\n\n  console.log(gameObjectMap);\n  console.log(globalState);\n}\n","export const initialState = {\n  x: 100,\n  y: 100,\n  w: 100,\n  h: 100\n};\n\nexport const render = state => graphics => {\n  graphics.drawRect(state)({ color: \"yellow\" });\n};\n","import hero from \"./hero_front.png\";\n\nimport { Assets } from \"./icescraper\";\n\nimport * as Rect from \"./Rect\";\n\nexport const initialState = {\n  x: 20,\n  y: 20,\n  hitpoints: {\n    max: 100,\n    value: 50\n  }\n};\n\nexport const children = [Rect];\n\nexport const preload = () => ({\n  hero\n});\n\nexport const render = state => graphics => {\n  const heroAsset = Assets.resolve(\"hero\");\n\n  graphics.drawImage(state)(heroAsset);\n\n  graphics.drawRect({\n    x: state.x,\n    y: state.y - 20,\n    w: heroAsset.width,\n    h: 5\n  })({ color: \"red\" });\n\n  graphics.drawRect({\n    x: state.x,\n    y: state.y - 20,\n    w: (state.hitpoints.value / state.hitpoints.max) * heroAsset.width,\n    h: 5\n  })({ color: \"green\" });\n};\n\nexport const update = state => action => {};\n","import icescraper, { Assets } from \"./icescraper\";\n\nimport * as Hero from \"./Hero\";\n\nAssets.queue(Hero.preload())\n  .then(res => {\n    icescraper(800, 600, [Hero]);\n  })\n  .catch(err => console.error(err));\n"]}